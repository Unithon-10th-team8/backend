"""empty message

Revision ID: b429222469a3
Revises: d3c879ac3509
Create Date: 2023-09-23 14:10:21.213738

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "b429222469a3"
down_revision: Union[str, None] = "d3c879ac3509"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "calendar_recurring",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("start_dt", sa.DateTime(timezone=True), nullable=False),
        sa.Column("end_dt", sa.DateTime(timezone=True), nullable=False),
        sa.Column("interval", sa.Integer(), nullable=False),
        sa.Column("frequency", sa.String(length=100), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("deleted_at", sa.DateTime(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        "calendar_recurring_user_id_idx",
        "calendar_recurring",
        ["user_id"],
        unique=False,
    )
    op.create_table(
        "contact",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("name", sa.String(length=100), nullable=False),
        sa.Column("organization", sa.String(length=100), nullable=True),
        sa.Column("position", sa.String(length=100), nullable=True),
        sa.Column("phone", sa.String(length=30), nullable=True),
        sa.Column("email", sa.Text(), nullable=True),
        sa.Column("category", sa.String(length=100), nullable=True),
        sa.Column("profile_image_url", sa.Text(), nullable=True),
        sa.Column("content", sa.String(length=1000), nullable=True),
        sa.Column("is_important", sa.Boolean(), nullable=False),
        sa.Column("repeat_interval", sa.Text(), nullable=True),
        sa.Column("repeat_base_date", sa.DateTime(timezone=True), nullable=True),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("deleted_at", sa.DateTime(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index("contact_user_id_idx", "contact", ["user_id"], unique=False)
    op.create_table(
        "calendar",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("name", sa.String(length=100), nullable=False),
        sa.Column("start_dt", sa.DateTime(timezone=True), nullable=True),
        sa.Column("end_dt", sa.DateTime(timezone=True), nullable=True),
        sa.Column("is_all_day", sa.Boolean(), nullable=True),
        sa.Column("remind_interval", sa.Integer(), nullable=True),
        sa.Column("is_important", sa.Boolean(), nullable=False),
        sa.Column("content", sa.String(length=1000), nullable=True),
        sa.Column("is_complete", sa.Boolean(), nullable=False),
        sa.Column("completed_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("is_repeat", sa.Boolean(), nullable=False),
        sa.Column("tags", sa.ARRAY(sa.String(length=30)), nullable=True),
        sa.Column("calendar_recurring_id", sa.UUID(), nullable=True),
        sa.Column("contact_id", sa.UUID(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("deleted_at", sa.DateTime(timezone=True), nullable=True),
        sa.CheckConstraint(
            "(start_dt IS NOT NULL) OR (is_all_day IS NOT NULL)",
            name="check_start_or_all_day",
        ),
        sa.ForeignKeyConstraint(
            ["calendar_recurring_id"],
            ["calendar_recurring.id"],
        ),
        sa.ForeignKeyConstraint(
            ["contact_id"],
            ["contact.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index("calendar_contact_id_idx", "calendar", ["contact_id"], unique=False)
    op.create_table(
        "calendar_contact",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("calendar_id", sa.UUID(), nullable=False),
        sa.Column("contact_id", sa.UUID(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("deleted_at", sa.DateTime(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["calendar_id"],
            ["calendar.id"],
        ),
        sa.ForeignKeyConstraint(
            ["contact_id"],
            ["contact.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.add_column("user", sa.Column("name", sa.String(length=100), nullable=False))
    op.add_column("user", sa.Column("email", sa.Text(), nullable=True))
    op.add_column(
        "user", sa.Column("deleted_at", sa.DateTime(timezone=True), nullable=True)
    )
    op.drop_column("user", "is_active")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "user",
        sa.Column("is_active", sa.BOOLEAN(), autoincrement=False, nullable=False),
    )
    op.drop_column("user", "deleted_at")
    op.drop_column("user", "email")
    op.drop_column("user", "name")
    op.drop_table("calendar_contact")
    op.drop_index("calendar_contact_id_idx", table_name="calendar")
    op.drop_table("calendar")
    op.drop_index("contact_user_id_idx", table_name="contact")
    op.drop_table("contact")
    op.drop_index("calendar_recurring_user_id_idx", table_name="calendar_recurring")
    op.drop_table("calendar_recurring")
    # ### end Alembic commands ###
